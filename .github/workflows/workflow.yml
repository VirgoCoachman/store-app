# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
env:
  PROPERTIES_PATH: "./android/key.properties"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build-android:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-java@v2
      with:
        distribution: 'zulu'
        java-version: '11'
    
    # creating the key.properties file
    - run: |
        echo keyPassword=\${{ secrets.KEY_STORE }} > ${{env.PROPERTIES_PATH}}
        echo storePassword=\${{ secrets.KEY_PASSWORD }} >> ${{env.PROPERTIES_PATH}}
        echo keyAlias=\${{ secrets.KEY_ALIAS }} >> ${{env.PROPERTIES_PATH}}

    # Decoding base64 key into file 
    - run: |
        echo pwd
        echo "${{ secrets.KEY_STORE }}" | base64 --decode > upload-keystore.jks
        
    - uses: subosito/flutter-action@v2
      with:
        flutter-version: '2.10.4'
    - run: flutter pub get
    - run: flutter test
    - run: flutter build apk
    - run: flutter build appbundle

    # Make appbundle downloadable
    - name: Upload artefato
      uses: actions/upload-artifact@v2
      with:
        name: appbundle
        path: build/app/outputs/bundle/release
    
  # build-ios:
  #   runs-on: macos-latest
  #   steps:
  #   - uses: actions/checkout@v3
  #   - uses: subosito/flutter-action@v2
  #     with:
  #       flutter-version: '2.10.4'
  #       architecture: x64
  #   - run: flutter pub get
  #   - run: flutter test
  #   - run: flutter build ios --release --no-codesign
